<?xml version="1.0" encoding="UTF-8"?>
<project name="FloatNotes" default="dist" basedir="." xmlns:jsl="antlib:com.googlecode.jslint4java">

  <loadfile property="version" srcfile="version.txt" >
    <filterchain>
      <striplinebreaks/>
    </filterchain>
  </loadfile>

  <property name="src.dir" location="src" />
  <property name="build.dir" location="build" />
  <property name="tmp.dir" value="tmp"/>	

  <property name="dist.dir" location="dist" />
  <property name="debug.dir" location="debug" />

  <property name="cpp.debug" value="0" />
  <property name="cpp.testrun" value="0" />

  <scriptdef name="generateguid" language="javascript">
    <attribute name="property" />
    <![CDATA[
      importClass( java.util.UUID );

      project.setProperty( attributes.get( "property" ), UUID.randomUUID() );
    ]]>
  </scriptdef>

  <generateguid property="guid" />

  <macrodef name="prepare-cpp">
    <attribute name="dest" />
    <attribute name="src" />
    <sequential>
      <copy todir="@{dest}">
        <fileset dir="@{src}" />
      </copy>
      <replaceregexp byline="true" match="^//!#" replace="#">
        <fileset dir="@{dest}" />
      </replaceregexp>
    </sequential>
  </macrodef>

  <target name="-init">
    <tstamp />
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build.dir}/defaults" />
    <mkdir dir="${tmp.dir}" />
  </target>

  <target name="-copy" depends="-init">
    <copy todir="${build.dir}" file="LICENSE" />
    <copy todir="${build.dir}/note_content">
      <fileset dir="${src.dir}/note_content" />
    </copy>	
    <copy todir="${build.dir}/content">
      <fileset dir="${src.dir}/XUL" />
    </copy>	
    <copy todir="${build.dir}/defaults/preferences">
      <fileset dir="${src.dir}/preferences/" />
    </copy>
    <copy todir="${build.dir}/locale">
      <fileset dir="locale" />
    </copy>
    <copy todir="${build.dir}/modules">
      <fileset dir="lib" />
    </copy>
    <copy todir="${build.dir}/components">
      <fileset dir="${src.dir}/js/components" />
    </copy>
    <copy todir="${build.dir}/skin">
      <fileset dir="${src.dir}/css" />
      <filterset>
        <filter token="U" value="${guid}" />
      </filterset>
    </copy>
    <copy todir="${build.dir}/skin">
      <fileset dir="images" />
    </copy>
    <copy todir="${build.dir}" filtering="true">
      <fileset dir="META" />
      <filterset>
        <filter token="VERSION" value="${version}" />
      </filterset>
    </copy>
  </target>

  <target name="build" depends="-copy">
    <prepare-cpp dest="${tmp.dir}" src="${src.dir}/js"/>

    <apply executable="cpp" dir="${tmp.dir}">
      <fileset file="${tmp.dir}/main.js" />
      <arg value="-P" /> 
      <arg value="-C" />
      <arg value="-DDEBUG=${cpp.debug}" />
      <arg value="-DTESTRUN=${cpp.testrun}" />
      <srcfile />
      <arg value="${build.dir}/content/floatnotes.js" />
    </apply>
        <apply executable="cpp" dest="${build.dir}/modules">
          <fileset dir="${tmp.dir}/modules" />
          <arg line="-P -C -DDEBUG=${cpp.debug} -DTESTRUN=${cpp.testrun}" />
          <srcfile />
          <targetfile />
          <globmapper from="*.js" to="*.js" />
    </apply>

    <exec executable="git" outputproperty="date">
      <arg line="log -1 --pretty=format:%ad" />
    </exec>
    <replaceregexp match="@DATE@" replace="${date}" file="${build.dir}/content/floatnotes.js" />
    <replaceregexp match="@VERSION@" replace="${version}" file="${build.dir}/content/floatnotes.js" />
    <replaceregexp match="@U@" replace="${guid}" file="${build.dir}/modules/util-Css.js" />
  </target>

  <target name="debug">
    <antcall target="build">
      <param name="cpp.debug" value="1" />
        </antcall>
    </target>

  <target name="dist" depends="build">
    <mkdir dir="${dist.dir}" />
    <zip destfile="${dist.dir}/floatnotes-${version}.xpi" basedir="${build.dir}" excludes="**/.*" />
    <delete dir="${tmp.dir}" failonerror="false" />
  </target>

  <target name="clean">
    <delete dir="${build.dir}" failonerror="false" />
    <delete dir="${dist.dir}" failonerror="false" />
    <delete dir="${tmp.dir}" failonerror="false" />
  </target>
</project>
